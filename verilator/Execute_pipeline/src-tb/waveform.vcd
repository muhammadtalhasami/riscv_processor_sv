$version Generated by VerilatedVcd $end
$date Mon Jun  3 17:30:07 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 5! clk $end
  $var wire 32 7! instruction [31:0] $end
  $var wire  1 6! rst $end
  $scope module core $end
   $var wire  1 z DM_Load $end
   $var wire 32 Q DM_alu_res_out [31:0] $end
   $var wire 32 # DM_load_data_in [31:0] $end
   $var wire 32 R DM_store_data_out [31:0] $end
   $var wire 32 <! INSTRUCTION [31:0] $end
   $var wire  1 5! clk $end
   $var wire  4 S data_mem_mask [3:0] $end
   $var wire  1 "! data_mem_request $end
   $var wire  1 u data_mem_valid $end
   $var wire  1 #! data_mem_we_re $end
   $var wire 32 7! instruction [31:0] $end
   $var wire  4 >! instruction_mem_mask [3:0] $end
   $var wire  1 !! instruction_mem_request $end
   $var wire  1 =! instruction_mem_we_re $end
   $var wire 32 P instruction_o [31:0] $end
   $var wire 32 t pc_address [31:0] $end
   $var wire  1 6! rst $end
   $var wire  1 / valid $end
   $scope module u_Core10 $end
    $var wire 32 <! ADDRESS [31:0] $end
    $var wire 32 @! ALU_CONTROL [31:0] $end
    $var wire  1 *! Branch $end
    $var wire  1 ^ Branch_decode_pp $end
    $var wire 32 <! DATA_WIDTH [31:0] $end
    $var wire  1 z DM_Load $end
    $var wire 32 Q DM_alu_res_out [31:0] $end
    $var wire 32 # DM_load_data_in [31:0] $end
    $var wire 32 R DM_store_data_out [31:0] $end
    $var wire  1 u DM_valid $end
    $var wire 32 <! INSTRUCTION [31:0] $end
    $var wire  1 &! Jalr $end
    $var wire  1 ` Jalr_decode_pp $end
    $var wire  1 (! Load $end
    $var wire  1 ~ Load_decode_pp $end
    $var wire  1 )! Store $end
    $var wire  1 , Store_decode_pp $end
    $var wire 32 t address_out [31:0] $end
    $var wire  4 %! alu_control [3:0] $end
    $var wire  4 ( alu_control_decode_pp [3:0] $end
    $var wire 32 | alu_in_a [31:0] $end
    $var wire 32 { alu_in_b [31:0] $end
    $var wire 32 } alu_res_out [31:0] $end
    $var wire 32 Q alu_res_out_execute_pp [31:0] $end
    $var wire  1 +! branch_result $end
    $var wire  1 a branch_result_decode_pp $end
    $var wire  1 5! clk $end
    $var wire  4 S data_mem_mask [3:0] $end
    $var wire  1 "! data_mem_request $end
    $var wire  1 #! data_mem_we_re $end
    $var wire  1 ] decode_reg_write_pp $end
    $var wire  1 [ flush $end
    $var wire 32 P instruction [31:0] $end
    $var wire 32 X instruction_decode_pp [31:0] $end
    $var wire 32 Y instruction_fetch_pp [31:0] $end
    $var wire  4 >! instruction_mem_mask [3:0] $end
    $var wire  1 !! instruction_mem_request $end
    $var wire  1 / instruction_mem_valid $end
    $var wire  1 =! instruction_mem_we_re $end
    $var wire 32 P instruction_out [31:0] $end
    $var wire 32 T instruction_out_execute_pp [31:0] $end
    $var wire  1 z load_out_execute_pp $end
    $var wire  1 )! mem_en $end
    $var wire  1 + mem_en_decode_pp $end
    $var wire  1 ) mem_en_execute_pp $end
    $var wire  2 b mem_reg_out_execute_pp [1:0] $end
    $var wire  2 ,! mem_to_reg [1:0] $end
    $var wire  2 c mem_to_reg_decode_pp [1:0] $end
    $var wire  1 '! next_sel $end
    $var wire 32 W next_sel_address [31:0] $end
    $var wire 32 U next_sel_address_execute_pp [31:0] $end
    $var wire  1 _ next_sel_decode_pp $end
    $var wire 32 % op_b_execute_pp [31:0] $end
    $var wire 32 9! opa_mux_out [31:0] $end
    $var wire 32 ' opa_mux_out_decode_pp [31:0] $end
    $var wire 32 8! opb_mux_out [31:0] $end
    $var wire 32 & opb_mux_out_decode_pp [31:0] $end
    $var wire 32 V pc_decode_pp [31:0] $end
    $var wire 32 $ pre_address_out_execute_pp [31:0] $end
    $var wire 32 w pre_pc [31:0] $end
    $var wire 32 Z pre_pc_fetch_pp [31:0] $end
    $var wire  5 f rd_execute [4:0] $end
    $var wire 32 :! rd_wb_data [31:0] $end
    $var wire  1 ;! reg_write $end
    $var wire  1 \ reg_write_execute_pp $end
    $var wire  5 d rs1_decode [4:0] $end
    $var wire  5 - rs1_decode_pp [4:0] $end
    $var wire  5 e rs2_decode [4:0] $end
    $var wire  5 . rs2_decode_pp [4:0] $end
    $var wire  1 6! rst $end
    $var wire  1 * store_out_execute_pp $end
    $var wire 32 $! wrap_load_out [31:0] $end
    $scope module u_Decode_pipe0 $end
     $var wire 32 @! ALU_CONTROL [31:0] $end
     $var wire  1 *! Branch $end
     $var wire  1 ^ Branch_decode_pp $end
     $var wire 32 <! DATA_WIDTH [31:0] $end
     $var wire 32 <! INSTRUCTION [31:0] $end
     $var wire  1 &! Jalr $end
     $var wire  1 ` Jalr_decode_pp $end
     $var wire  1 (! Load $end
     $var wire  1 ~ Load_decode_pp $end
     $var wire  1 )! Store $end
     $var wire  1 , Store_decode_pp $end
     $var wire  4 ( alu_con [3:0] $end
     $var wire  4 %! alu_control [3:0] $end
     $var wire  4 ( alu_control_decode_pp [3:0] $end
     $var wire  1 ^ branch_ $end
     $var wire  1 a branch_res $end
     $var wire  1 +! branch_result $end
     $var wire  1 a branch_result_decode_pp $end
     $var wire  1 5! clk $end
     $var wire  1 ] decode_reg_write_pp $end
     $var wire 32 X instruct [31:0] $end
     $var wire 32 Y instruction [31:0] $end
     $var wire 32 X instruction_decode_pp [31:0] $end
     $var wire  1 ` jalr $end
     $var wire  1 ~ l $end
     $var wire  1 )! mem_en $end
     $var wire  1 + mem_en_decode_pp $end
     $var wire  2 c mem_reg [1:0] $end
     $var wire  2 ,! mem_to_reg [1:0] $end
     $var wire  2 c mem_to_reg_decode_pp [1:0] $end
     $var wire  1 + men $end
     $var wire  1 '! next_sel $end
     $var wire  1 _ next_sel_decode_pp $end
     $var wire  1 _ nextsel $end
     $var wire 32 ' opa_mux [31:0] $end
     $var wire 32 9! opa_mux_out [31:0] $end
     $var wire 32 ' opa_mux_out_decode_pp [31:0] $end
     $var wire 32 & opb_mux [31:0] $end
     $var wire 32 8! opb_mux_out [31:0] $end
     $var wire 32 & opb_mux_out_decode_pp [31:0] $end
     $var wire 32 Z pc [31:0] $end
     $var wire 32 V pc_decode_pp [31:0] $end
     $var wire 32 V pre_address [31:0] $end
     $var wire  5 - r1 [4:0] $end
     $var wire  5 . r2 [4:0] $end
     $var wire  1 ;! reg_write $end
     $var wire  1 ] rg $end
     $var wire  5 d rs1 [4:0] $end
     $var wire  5 - rs1_decode_pp [4:0] $end
     $var wire  5 e rs2 [4:0] $end
     $var wire  5 . rs2_decode_pp [4:0] $end
     $var wire  1 , s $end
    $upscope $end
    $scope module u_Decode_stage0 $end
     $var wire 32 @! ALU_CONTROL [31:0] $end
     $var wire  1 *! Branch $end
     $var wire 32 <! DATA_WIDTH [31:0] $end
     $var wire  1 u DM_valid $end
     $var wire 32 <! INSTRUCTION [31:0] $end
     $var wire  1 &! Jalr $end
     $var wire  1 (! Load $end
     $var wire  1 )! Store $end
     $var wire  4 %! alu_control [3:0] $end
     $var wire  1 *! branch $end
     $var wire  1 +! branch_result $end
     $var wire  1 5! clk $end
     $var wire  1 ~ decode_ppload $end
     $var wire  1 \ decode_reg_write_pp $end
     $var wire 32 i i_imme [31:0] $end
     $var wire 32 0! imm_mux_out [31:0] $end
     $var wire  3 /! imm_sel [2:0] $end
     $var wire 32 Y instruction [31:0] $end
     $var wire 32 T instruction_rd [31:0] $end
     $var wire  1 )! mem_en $end
     $var wire  2 ,! mem_to_reg [1:0] $end
     $var wire  1 '! next_sel $end
     $var wire 32 x op_a [31:0] $end
     $var wire 32 y op_b [31:0] $end
     $var wire 32 9! opa_mux_out [31:0] $end
     $var wire 32 8! opb_mux_out [31:0] $end
     $var wire  1 -! operand_a $end
     $var wire  1 .! operand_b $end
     $var wire 32 Z pc [31:0] $end
     $var wire  1 ;! reg_write $end
     $var wire  5 d rs1 [4:0] $end
     $var wire  5 e rs2 [4:0] $end
     $var wire  1 6! rst $end
     $var wire 32 :! rwd_data_out [31:0] $end
     $var wire 32 j s_imme [31:0] $end
     $var wire 32 k sb_imme [31:0] $end
     $var wire 32 m u_imme [31:0] $end
     $var wire 32 l uj_imme [31:0] $end
     $scope module u_branch0 $end
      $var wire 32 <! DataWidth [31:0] $end
      $var wire  1 *! en $end
      $var wire  3 o fun3 [2:0] $end
      $var wire 32 x operand_a [31:0] $end
      $var wire 32 y operand_b [31:0] $end
      $var wire  1 +! result $end
     $upscope $end
     $scope module u_cu0 $end
      $var wire 32 @! ALU_CONTROL [31:0] $end
      $var wire  1 *! Branch $end
      $var wire  1 u DM_valid $end
      $var wire 32 B! FUNCTION3 [31:0] $end
      $var wire  1 &! Jalr $end
      $var wire  1 (! Load $end
      $var wire 32 C! OPCODE [31:0] $end
      $var wire  1 )! Store $end
      $var wire  4 %! alu_control [3:0] $end
      $var wire  1 4! auipc $end
      $var wire  1 *! branch $end
      $var wire  1 ~ decode_ppload $end
      $var wire  3 o fun3 [2:0] $end
      $var wire  1 n fun7 $end
      $var wire  1 2! i_type $end
      $var wire  3 /! imm_sel [2:0] $end
      $var wire  1 '! jal $end
      $var wire  1 &! jalr $end
      $var wire  1 (! load $end
      $var wire  1 3! lui $end
      $var wire  1 )! mem_en $end
      $var wire  2 ,! mem_to_reg [1:0] $end
      $var wire  1 '! next_sel $end
      $var wire  7 p opcode_i [6:0] $end
      $var wire  1 -! operand_a_o $end
      $var wire  1 .! operand_b_o $end
      $var wire  1 1! r_type $end
      $var wire  1 ;! reg_write_o $end
      $var wire  1 )! store $end
     $upscope $end
     $scope module u_immediate_gene0 $end
      $var wire 32 <! INSTRUCTION [31:0] $end
      $var wire 32 i i_imme [31:0] $end
      $var wire 32 Y instruction [31:0] $end
      $var wire 32 j s_imme [31:0] $end
      $var wire 32 k sb_imme [31:0] $end
      $var wire 32 m u_imme [31:0] $end
      $var wire 32 l uj_imme [31:0] $end
     $upscope $end
     $scope module u_registerfile0 $end
      $var wire 32 D! AddrRegWidth [31:0] $end
      $var wire 32 <! Data_Width [31:0] $end
      $var wire  1 5! clk $end
      $var wire 32 :! data [31:0] $end
      $var wire  1 \ en $end
      $var wire 32 O i [31:0] $end
      $var wire 32 x op_a [31:0] $end
      $var wire 32 y op_b [31:0] $end
      $var wire  5 f rd [4:0] $end
      $var wire 32 0 register(1) [31:0] $end
      $var wire 32 9 register(10) [31:0] $end
      $var wire 32 : register(11) [31:0] $end
      $var wire 32 ; register(12) [31:0] $end
      $var wire 32 < register(13) [31:0] $end
      $var wire 32 = register(14) [31:0] $end
      $var wire 32 > register(15) [31:0] $end
      $var wire 32 ? register(16) [31:0] $end
      $var wire 32 @ register(17) [31:0] $end
      $var wire 32 A register(18) [31:0] $end
      $var wire 32 B register(19) [31:0] $end
      $var wire 32 1 register(2) [31:0] $end
      $var wire 32 C register(20) [31:0] $end
      $var wire 32 D register(21) [31:0] $end
      $var wire 32 E register(22) [31:0] $end
      $var wire 32 F register(23) [31:0] $end
      $var wire 32 G register(24) [31:0] $end
      $var wire 32 H register(25) [31:0] $end
      $var wire 32 I register(26) [31:0] $end
      $var wire 32 J register(27) [31:0] $end
      $var wire 32 K register(28) [31:0] $end
      $var wire 32 L register(29) [31:0] $end
      $var wire 32 2 register(3) [31:0] $end
      $var wire 32 M register(30) [31:0] $end
      $var wire 32 N register(31) [31:0] $end
      $var wire 32 3 register(4) [31:0] $end
      $var wire 32 4 register(5) [31:0] $end
      $var wire 32 5 register(6) [31:0] $end
      $var wire 32 6 register(7) [31:0] $end
      $var wire 32 7 register(8) [31:0] $end
      $var wire 32 8 register(9) [31:0] $end
      $var wire  5 d rs1 [4:0] $end
      $var wire  5 e rs2 [4:0] $end
      $var wire  1 6! rst $end
     $upscope $end
    $upscope $end
    $scope module u_Execute_pipe0 $end
     $var wire 32 } alu_res [31:0] $end
     $var wire 32 Q alu_res_out_execute_pp [31:0] $end
     $var wire 32 Q alu_result [31:0] $end
     $var wire  1 5! clk $end
     $var wire 32 T instruction [31:0] $end
     $var wire 32 X instruction_in [31:0] $end
     $var wire 32 T instruction_out_execute_pp [31:0] $end
     $var wire  1 z load $end
     $var wire  1 ~ load_in $end
     $var wire  1 z load_out_execute_pp $end
     $var wire  1 ) me $end
     $var wire  1 + mem_en $end
     $var wire  1 ) mem_en_execute_pp $end
     $var wire  2 b mem_reg [1:0] $end
     $var wire  2 c mem_reg_in [1:0] $end
     $var wire  2 b mem_reg_out_execute_pp [1:0] $end
     $var wire 32 W next_sel_addr [31:0] $end
     $var wire 32 U next_sel_address_execute_pp [31:0] $end
     $var wire 32 U nextsel_addr [31:0] $end
     $var wire 32 & op_b_execute [31:0] $end
     $var wire 32 % op_b_execute_pp [31:0] $end
     $var wire 32 % opb_data [31:0] $end
     $var wire 32 $ pre_address [31:0] $end
     $var wire 32 V pre_address_in [31:0] $end
     $var wire 32 $ pre_address_out_execute_pp [31:0] $end
     $var wire  1 \ reg_write $end
     $var wire  1 \ reg_write_execute_pp $end
     $var wire  1 ] reg_write_in $end
     $var wire  1 * store $end
     $var wire  1 , store_in $end
     $var wire  1 * store_out_execute_pp $end
    $upscope $end
    $scope module u_Execute_stage0 $end
     $var wire 32 @! ALU_CONTROL [31:0] $end
     $var wire 32 <! DATA_WIDTH [31:0] $end
     $var wire 32 | a_i [31:0] $end
     $var wire  4 ( alu_control [3:0] $end
     $var wire 32 } alu_res_out [31:0] $end
     $var wire 32 { b_i [31:0] $end
     $var wire 32 W next_sel_address [31:0] $end
     $var wire 32 V pc_address [31:0] $end
     $scope module u_alu0 $end
      $var wire 32 <! DATA_WIDTH [31:0] $end
      $var wire 32 | a_i [31:0] $end
      $var wire 32 { b_i [31:0] $end
      $var wire  4 ( op_i [3:0] $end
      $var wire 32 } res_o [31:0] $end
     $upscope $end
    $upscope $end
    $scope module u_Fetch_pipe0 $end
     $var wire 32 <! ADDRESS [31:0] $end
     $var wire 32 <! INSTRUCTION [31:0] $end
     $var wire  1 &! Jalr $end
     $var wire  1 *! branch_result $end
     $var wire  1 5! clk $end
     $var wire  1 g flush_pipeline $end
     $var wire  1 h flush_pipeline2 $end
     $var wire 32 Y instruc [31:0] $end
     $var wire 32 P instruction_fetch [31:0] $end
     $var wire 32 Y instruction_fetch_pp [31:0] $end
     $var wire  1 (! load $end
     $var wire  1 '! next_select $end
     $var wire 32 Z pre_address [31:0] $end
     $var wire 32 w pre_address_fetch [31:0] $end
     $var wire 32 Z pre_pc_fetch_pp [31:0] $end
    $upscope $end
    $scope module u_Fetch_stage0 $end
     $var wire 32 <! ADDRESS [31:0] $end
     $var wire  1 u DM_valid $end
     $var wire 32 <! INSTRUCTION [31:0] $end
     $var wire  1 ` Jalr $end
     $var wire 32 A! address_in [31:0] $end
     $var wire  1 ^ branch $end
     $var wire  1 a branch_result $end
     $var wire  1 5! clk $end
     $var wire 32 P instruction [31:0] $end
     $var wire 32 P instruction_fetch [31:0] $end
     $var wire  1 (! load $end
     $var wire  4 >! mask [3:0] $end
     $var wire 32 } next_address [31:0] $end
     $var wire  1 _ next_sel $end
     $var wire 32 t pc_addr_out [31:0] $end
     $var wire 32 w pre_pc [31:0] $end
     $var wire  1 !! request $end
     $var wire  1 6! rst $end
     $var wire  1 =! we_re $end
     $scope module u_pc0 $end
      $var wire 32 <! ADDRESS [31:0] $end
      $var wire  1 u DM_valid $end
      $var wire  1 ` Jalr $end
      $var wire 32 A! address_in [31:0] $end
      $var wire 32 t address_out [31:0] $end
      $var wire  1 ^ branch $end
      $var wire  1 a branch_result $end
      $var wire  1 5! clk $end
      $var wire  1 (! load $end
      $var wire 32 } next_address [31:0] $end
      $var wire  1 _ next_sel $end
      $var wire 32 w pre_pc [31:0] $end
      $var wire  1 6! rst $end
     $upscope $end
    $upscope $end
    $scope module u_Writeback_stage0 $end
     $var wire 32 <! DataWidth [31:0] $end
     $var wire 32 Q alu_out [31:0] $end
     $var wire 32 $! data_mem_out [31:0] $end
     $var wire  2 b mem_to_reg [1:0] $end
     $var wire 32 U next_sel_address [31:0] $end
     $var wire 32 :! rd_mux_out [31:0] $end
    $upscope $end
    $scope module u_memorystage0 $end
     $var wire 32 <! DataWidth [31:0] $end
     $var wire 32 Q alu_out_address [31:0] $end
     $var wire  1 u data_valid $end
     $var wire 32 T instruction [31:0] $end
     $var wire  1 z load $end
     $var wire  4 S mask [3:0] $end
     $var wire  1 ) mem_en $end
     $var wire 32 % operand_b [31:0] $end
     $var wire  1 "! request $end
     $var wire  1 * store $end
     $var wire 32 R store_data_out [31:0] $end
     $var wire  1 / valid $end
     $var wire  1 #! we_re $end
     $var wire 32 # wrap_load_in [31:0] $end
     $var wire 32 $! wrap_load_out [31:0] $end
     $scope module u_wrapper_memory0 $end
      $var wire 32 <! DataWidth [31:0] $end
      $var wire  1 z Load $end
      $var wire  2 r byteadd [1:0] $end
      $var wire 32 % data_i [31:0] $end
      $var wire 32 R data_o [31:0] $end
      $var wire  1 u data_valid $end
      $var wire  3 q fun3 [2:0] $end
      $var wire  4 S masking [3:0] $end
      $var wire  1 ) mem_en $end
      $var wire 32 # wrap_load_in [31:0] $end
      $var wire 32 $! wrap_load_out [31:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module u_data_memory0 $end
    $var wire 32 A! INIT_MEM [31:0] $end
    $var wire  8 s address [7:0] $end
    $var wire  1 5! clk $end
    $var wire 32 R data_in [31:0] $end
    $var wire 32 # data_out [31:0] $end
    $var wire  1 z load $end
    $var wire  4 S mask [3:0] $end
    $var wire  1 "! request $end
    $var wire  1 6! rst $end
    $var wire  1 u valid $end
    $var wire  1 #! we_re $end
    $scope module u_memory $end
     $var wire 32 A! INIT_MEM [31:0] $end
     $var wire  8 s address [7:0] $end
     $var wire  1 5! clk $end
     $var wire 32 R data_in [31:0] $end
     $var wire 32 # data_out [31:0] $end
     $var wire  4 S mask [3:0] $end
     $var wire  1 "! request $end
     $var wire  1 #! we_re $end
    $upscope $end
   $upscope $end
   $scope module u_instruc_mem_top0 $end
    $var wire 32 ?! INIT_MEM [31:0] $end
    $var wire  8 v address [7:0] $end
    $var wire  1 5! clk $end
    $var wire 32 7! data_in [31:0] $end
    $var wire 32 P data_out [31:0] $end
    $var wire  4 >! mask [3:0] $end
    $var wire  1 !! request $end
    $var wire  1 6! rst $end
    $var wire  1 / valid $end
    $var wire  1 =! we_re $end
    $scope module u_memory $end
     $var wire 32 ?! INIT_MEM [31:0] $end
     $var wire  8 v address [7:0] $end
     $var wire  1 5! clk $end
     $var wire 32 7! data_in [31:0] $end
     $var wire 32 P data_out [31:0] $end
     $var wire  4 >! mask [3:0] $end
     $var wire  1 !! request $end
     $var wire  1 =! we_re $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b0000 (
0)
0*
0+
0,
b00000 -
b00000 .
0/
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b0000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000100 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
1[
0\
0]
0^
0_
0`
0a
b00 b
b00 c
b00000 d
b00000 e
b00000 f
0g
0h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
0n
b000 o
b0000000 p
b000 q
b00 r
b00000000 s
b00000000000000000000000000000000 t
0u
b00000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
0z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
0~
1!!
0"!
0#!
b00000000000000000000000000000000 $!
b0000 %!
0&!
0'!
0(!
0)!
0*!
0+!
b00 ,!
0-!
0.!
b000 /!
b00000000000000000000000000000000 0!
01!
02!
03!
04!
05!
06!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
0;!
b00000000000000000000000000100000 <!
0=!
b1111 >!
b00000000000000000000000000000001 ?!
b00000000000000000000000000000100 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000011 B!
b00000000000000000000000000000111 C!
b00000000000000000000000000000101 D!
#1
b00000000000000000000000000100000 O
b00000000101000000000000100010011 P
b00000000000000000000000000000100 U
15!
#2
05!
16!
#3
1/
b00000000101000000000000100010011 Y
b01010 e
b00000000000000000000000000001010 i
b00000000000000000000000000000010 j
b00000000000000000000000000000010 k
b00000000000000000000000000001010 l
b00000000101000000000000000000000 m
b0010011 p
b00000000000000000000000000000100 t
b00000001 v
1.!
b00000000000000000000000000001010 0!
12!
15!
b00000000000000000000000000001010 8!
1;!
#4
05!
#5
b00000000000000000000000000001010 &
b01010 .
b00000000001000010000000100110011 P
b00000000101000000000000100010011 X
1]
b00000000000000000000000000001000 t
b00000010 v
b00000000000000000000000000000100 w
b00000000000000000000000000001010 {
b00000000000000000000000000001010 }
15!
#6
05!
#7
b00000000000000000000000000001010 %
b00000010100000011000000110010011 P
b00000000000000000000000000001010 Q
b00000000101000000000000100010011 T
b00000000001000010000000100110011 Y
b00000000000000000000000000000100 Z
0[
1\
b00010 d
b00010 e
b00010 f
b00000000000000000000000000000010 i
b00000000000000010000000000000010 l
b00000000001000010000000000000000 m
b0110011 p
b10 r
b00000010 s
b00000000000000000000000000001100 t
b00000011 v
b00000000000000000000000000001000 w
0.!
b00000000000000000000000000000010 0!
11!
02!
15!
b00000000000000000000000000000000 8!
b00000000000000000000000000001010 :!
#8
05!
#9
b00000000000000000000000000000000 &
b00010 -
b00010 .
b00000000000000000000000000001010 1
b00000000000000000001010000110111 P
b00000000000000000000000000000100 V
b00000000000000000000000000001000 W
b00000000001000010000000100110011 X
b00000010100000011000000110010011 Y
b00000000000000000000000000001000 Z
b00011 d
b01000 e
b00000000000000000000000000101000 i
b00000000000000000000000000100011 j
b00000000000000000000100000100010 k
b00000000000000011000000000101000 l
b00000010100000011000000000000000 m
b0010011 p
b00000000000000000000000000010000 t
b00000100 v
b00000000000000000000000000001100 w
b00000000000000000000000000001010 |
b00000000000000000000000000010100 }
1.!
b00000000000000000000000000101000 0!
01!
12!
15!
b00000000000000000000000000101000 8!
#10
05!
#11
b00000000000000000000000000000100 $
b00000000000000000000000000000000 %
b00000000000000000000000000101000 &
b00011 -
b01000 .
b00000000000000000001010010010111 P
b00000000000000000000000000010100 Q
b00000000001000010000000100110011 T
b00000000000000000000000000001000 U
b00000000000000000000000000001000 V
b00000000000000000000000000001100 W
b00000010100000011000000110010011 X
b00000000000000000001010000110111 Y
b00000000000000000000000000001100 Z
b00000 d
b00000 e
b00000000000000000000000000000000 i
b00000000000000000000000000001000 j
b00000000000000000000000000001000 k
b00000000000000000001000000000000 l
b00000000000000000001000000000000 m
b001 o
b0110111 p
b00 r
b00000101 s
b00000000000000000000000000010100 t
b00000101 v
b00000000000000000000000000010000 w
b00000000000000000000000000101000 {
b00000000000000000000000000000000 |
b00000000000000000000000000101000 }
b1111 %!
b100 /!
b00000000000000000001000000000000 0!
02!
13!
15!
b00000000000000000001000000000000 8!
b00000000000000000000000000010100 :!
#12
05!
#13
b00000000000000000000000000001000 $
b00000000000000000000000000101000 %
b00000000000000000001000000000000 &
b1111 (
b00000 -
b00000 .
b00000000000000000000000000010100 1
b00000000001100010001011001100011 P
b00000000000000000000000000101000 Q
b00000010100000011000000110010011 T
b00000000000000000000000000001100 U
b00000000000000000000000000001100 V
b00000000000000000000000000010000 W
b00000000000000000001010000110111 X
b00000000000000000001010010010111 Y
b00000000000000000000000000010000 Z
b00011 f
b00000000000000000000000000001001 j
b00000000000000000000100000001000 k
b0010111 p
b00001010 s
b00000000000000000000000000011000 t
b00000110 v
b00000000000000000000000000010100 w
b00000000000000000001000000000000 {
b00000000000000000001000000000000 }
b0000 %!
1-!
03!
14!
15!
b00000000000000000000000000010000 9!
b00000000000000000000000000101000 :!
#14
05!
#15
b00000000000000000000000000001100 $
b00000000000000000001000000000000 %
b00000000000000000000000000010000 '
b0000 (
b00000000000000000000000000101000 2
b00000000000000000000000000110011 P
b00000000000000000001000000000000 Q
b00000000000000000001010000110111 T
b00000000000000000000000000010000 U
b00000000000000000000000000010000 V
b00000000000000000000000000010100 W
b00000000000000000001010010010111 X
b00000000001100010001011001100011 Y
b00000000000000000000000000010100 Z
b00010 d
b00011 e
b01000 f
b00000000000000000000000000000011 i
b00000000000000000000000000001100 j
b00000000000000000000000000001100 k
b00000000000000010001100000000010 l
b00000000001100010001000000000000 m
b1100011 p
b001 q
b00000000 s
b00000000000000000000000000011100 t
b00000111 v
b00000000000000000000000000011000 w
b00000000000000000000000000010100 x
b00000000000000000000000000101000 y
b00000000000000000000000000010000 |
b00000000000000000001000000010000 }
1*!
1+!
b010 /!
b00000000000000000000000000001100 0!
04!
15!
b00000000000000000000000000001100 8!
b00000000000000000000000000010100 9!
b00000000000000000001000000000000 :!
0;!
#16
05!
#17
b00000000000000000000000000010000 $
b00000000000000000000000000001100 &
b00000000000000000000000000010100 '
b00010 -
b00011 .
b00000000000000000001000000000000 7
b00000000001000010000000100110011 P
b00000000000000000001000000010000 Q
b00000000000000000001010010010111 T
b00000000000000000000000000010100 U
b00000000000000000000000000010100 V
b00000000000000000000000000011000 W
b00000000001100010001011001100011 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
0]
1^
1a
b00000 d
b00000 e
b01001 f
1g
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b000 o
b0000000 p
b00000100 s
b00000000000000000000000000100000 t
b00001000 v
b00000000000000000000000000011100 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000001100 {
b00000000000000000000000000010100 |
b00000000000000000000000000100000 }
0*!
0+!
0-!
0.!
b00000000000000000000000000000000 0!
15!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000001000000010000 :!
#18
05!
#19
b00000000000000000000000000010100 $
b00000000000000000000000000001100 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000 -
b00000 .
b00000000000000000001000000010000 8
b00000000011000010010100000100011 P
b00000000000000000000000000100000 Q
b00000000001100010001011001100011 T
b00000000000000000000000000011000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000100 W
b00000000000000000000000000000000 X
0\
0^
0a
b01100 f
0g
1h
b00001000 s
b00000000000000000000000000100000 w
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
15!
b00000000000000000000000000100000 :!
#20
05!
#21
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 T
b00000000000000000000000000000100 U
1[
b00000 f
0h
b000 q
b00000000 s
b00000000000000000000000000100100 t
b00001001 v
15!
b00000000000000000000000000000000 :!
#22
05!
#23
b00000001000000010010001110000011 P
b00000000011000010010100000100011 Y
b00000000000000000000000000100000 Z
b00010 d
b00110 e
b00000000000000000000000000000110 i
b00000000000000000000000000010000 j
b00000000000000000000000000010000 k
b00000000000000010010000000000110 l
b00000000011000010010000000000000 m
b010 o
b0100011 p
b00000000000000000000000000101000 t
b00001010 v
b00000000000000000000000000100100 w
b00000000000000000000000000010100 x
1)!
1.!
b001 /!
b00000000000000000000000000010000 0!
15!
b00000000000000000000000000010000 8!
b00000000000000000000000000010100 9!
#24
05!
#25
b00000000000000000000000000010000 &
b00000000000000000000000000010100 '
1+
1,
b00010 -
b00110 .
b00000000110000000000000011101111 P
b00000000000000000000000000100000 V
b00000000000000000000000000100100 W
b00000000011000010010100000100011 X
b00000001000000010010001110000011 Y
b00000000000000000000000000100100 Z
b10000 e
b00000000000000000000000000010000 i
b00000000000000000000000000000111 j
b00000000000000000000100000000110 k
b00000000000000010010000000010000 l
b00000001000000010010000000000000 m
b0000011 p
b00000000000000000000000000101100 t
b00001011 v
b00000000000000000000000000101000 w
b00000000000000000000000000010000 {
b00000000000000000000000000010100 |
b00000000000000000000000000100100 }
0!!
1(!
0)!
b01 ,!
b000 /!
15!
1;!
#26
05!
#27
b00000000000000000000000000100000 $
b00000000000000000000000000010000 %
1)
1*
0+
0,
b10000 .
0/
b00000000000000000000000000100100 Q
b00000000000000000000000000010000 R
b1111 S
b00000000011000010010100000100011 T
b00000000000000000000000000100100 U
b00000000000000000000000000100100 V
b00000000000000000000000000101000 W
b00000001000000010010001110000011 X
0[
1]
b01 c
b10000 f
b010 q
b00001001 s
1~
1!!
1"!
1#!
0(!
0.!
15!
b00000000000000000000000000000000 8!
b00000000000000000000000000100100 :!
0;!
#28
05!
#29
b00000000000000000000000000100100 $
b00000000000000000000000000000000 &
0)
0*
1/
b00000000000000000000000000110011 P
b00000001000000010010001110000011 T
b00000000000000000000000000101000 U
b00000000110000000000000011101111 Y
b00000000000000000000000000101000 Z
1\
0]
b01 b
b00000 d
b01100 e
b00111 f
b00000000000000000000000000001100 i
b00000000000000000000000000000001 j
b00000000000000000000100000000000 k
b00000000000000000000000000001100 l
b00000000110000000000000000000000 m
b000 o
b1101111 p
b00000000000000000000000000110000 t
b00001100 v
b00000000000000000000000000101100 w
b00000000000000000000000000000000 x
1z
b00000000000000000000000000000000 {
b00000000000000000000000000010100 }
0~
0#!
1'!
b10 ,!
1-!
1.!
b011 /!
b00000000000000000000000000001100 0!
15!
b00000000000000000000000000001100 8!
b00000000000000000000000000101000 9!
b00000000000000000000000000000000 :!
1;!
#30
05!
#31
b00000000000000000000000000010000 #
b00000000000000000000000000000000 %
b00000000000000000000000000001100 &
b00000000000000000000000000101000 '
b00000 -
b01100 .
b00000000000000000000001010010011 P
b00000000000000000000000000010100 Q
b00000000000000000000000000101000 V
b00000000000000000000000000101100 W
b00000000110000000000000011101111 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
0\
1]
1_
b10 c
b00000 e
1g
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b0000000 p
b00000101 s
b00000000000000000000000000110100 t
1u
b00001101 v
b00000000000000000000000000110000 w
0z
b00000000000000000000000000001100 {
b00000000000000000000000000101000 |
b00000000000000000000000000110100 }
0"!
b00000000000000000000000000010000 $!
0'!
0-!
0.!
b00000000000000000000000000000000 0!
15!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000010000 :!
#32
05!
#33
b00000000000000000000000000101000 $
b00000000000000000000000000001100 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000 .
b00000000001100011000001000110011 P
b00000000000000000000000000110100 Q
b00000000110000000000000011101111 T
b00000000000000000000000000101100 U
b00000000000000000000000000000000 V
b00000000000000000000000000000100 W
b00000000000000000000000000000000 X
1\
0_
b10 b
b00001 f
0g
1h
b000 q
b00001101 s
0u
b00000000000000000000000000110100 w
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
15!
b00000000000000000000000000101100 :!
0;!
#34
05!
#35
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000101100 0
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 T
b00000000000000000000000000000100 U
1[
0]
b00000 f
0h
b00000000 s
b00000000000000000000000000111000 t
b00001110 v
15!
b00000000000000000000000000000100 :!
#36
05!
#37
b00000000000000001000000001100111 P
b00000000001100011000001000110011 Y
b00000000000000000000000000110100 Z
0\
b00011 d
b00011 e
b00000000000000000000000000000011 i
b00000000000000000000000000000100 j
b00000000000000000000000000000100 k
b00000000000000011000100000000010 l
b00000000001100011000000000000000 m
b0110011 p
b00000000000000000000000000111100 t
b00001111 v
b00000000000000000000000000111000 w
b00000000000000000000000000101000 x
b00000000000000000000000000101000 y
b00 ,!
b00000000000000011000100000000010 0!
11!
15!
b00000000000000000000000000101000 8!
b00000000000000000000000000101000 9!
1;!
#38
05!
#39
b00000000000000000000000000101000 &
b00000000000000000000000000101000 '
b00011 -
b00011 .
b00000000000000000000000000000000 P
b00000000000000000000000000110100 V
b00000000000000000000000000111000 W
b00000000001100011000001000110011 X
b00000000000000001000000001100111 Y
b00000000000000000000000000111000 Z
1]
b00 c
b00001 d
b00000 e
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000001000000000000000 l
b00000000000000001000000000000000 m
b1100111 p
b00000000000000000000000001000000 t
b00010000 v
b00000000000000000000000000111100 w
b00000000000000000000000000101100 x
b00000000000000000000000000000000 y
b00000000000000000000000000101000 {
b00000000000000000000000000101000 |
b00000000000000000000000001010000 }
1&!
1.!
b000 /!
b00000000000000000000000000000000 0!
01!
15!
b00000000000000000000000000000000 8!
b00000000000000000000000000101100 9!
#40
05!
#41
b00000000000000000000000000110100 $
b00000000000000000000000000101000 %
b00000000000000000000000000000000 &
b00000000000000000000000000101100 '
b00001 -
b00000 .
b00000000000000000000000001010000 Q
b00000000001100011000001000110011 T
b00000000000000000000000000111000 U
b00000000000000000000000000111000 V
b00000000000000000000000000111100 W
b00000000000000001000000001100111 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
0[
1\
1`
b00 b
b00000 d
b00100 f
1g
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b0000000 p
b00010100 s
b00000000000000000000000001000100 t
b00010001 v
b00000000000000000000000001000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 {
b00000000000000000000000000101100 |
b00000000000000000000000000101100 }
0&!
0.!
15!
b00000000000000000000000000000000 9!
b00000000000000000000000001010000 :!
0;!
#42
05!
#43
b00000000000000000000000000111000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 '
b00000 -
b00000000000000000000000001010000 3
b00000000000000000000000000101100 Q
b00000000000000001000000001100111 T
b00000000000000000000000000111100 U
b00000000000000000000000000000000 V
b00000000000000000000000000000100 W
b00000000000000000000000000000000 X
0]
0`
b00000 f
0g
1h
b00001011 s
b00000000000000000000000000101100 t
b00001011 v
b00000000000000000000000001000100 w
b00000000000000000000000000101100 {
b00000000000000000000000001011000 }
15!
b00000000000000000000000000101100 :!
#44
05!
#45
b00000000000000000000000000000000 $
b00000000000000000000000000110011 P
b00000000000000000000000001011000 Q
b00000000000000000000000000000000 T
b00000000000000000000000000000100 U
1[
0\
0h
b00010110 s
b00000000000000000000000000110000 t
b00001100 v
b00000000000000000000000000101100 w
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
15!
b00000000000000000000000001011000 :!
#46
05!
#47
b00000000000000000000001010010011 P
b00000000000000000000000000000000 Q
b00000000000000000000000000110011 Y
b00000000000000000000000000101100 Z
b0110011 p
b00000000 s
b00000000000000000000000000110100 t
b00001101 v
b00000000000000000000000000110000 w
11!
15!
b00000000000000000000000000000000 :!
1;!
#48
05!
#49
b00000000001100011000001000110011 P
b00000000000000000000000000101100 V
b00000000000000000000000000110000 W
b00000000000000000000000000110011 X
b00000000000000000000001010010011 Y
b00000000000000000000000000110000 Z
1]
b00000000000000000000000000000101 j
b00000000000000000000100000000100 k
b0010011 p
b00000000000000000000000000111000 t
b00001110 v
b00000000000000000000000000110100 w
1.!
01!
12!
15!
#50
05!
#51
b00000000000000000000000000101100 $
b00000000000000001000000001100111 P
b00000000000000000000000000110011 T
b00000000000000000000000000110000 U
b00000000000000000000000000110000 V
b00000000000000000000000000110100 W
b00000000000000000000001010010011 X
b00000000001100011000001000110011 Y
b00000000000000000000000000110100 Z
0[
1\
b00011 d
b00011 e
b00000000000000000000000000000011 i
b00000000000000000000000000000100 j
b00000000000000000000000000000100 k
b00000000000000011000100000000010 l
b00000000001100011000000000000000 m
b0110011 p
b00000000000000000000000000111100 t
b00001111 v
b00000000000000000000000000111000 w
b00000000000000000000000000101000 x
b00000000000000000000000000101000 y
0.!
b00000000000000000000000000000011 0!
11!
02!
15!
b00000000000000000000000000101000 8!
b00000000000000000000000000101000 9!
#52
05!
#53
b00000000000000000000000000110000 $
b00000000000000000000000000101000 &
b00000000000000000000000000101000 '
b00011 -
b00011 .
b00000000000000000000000000000000 P
b00000000000000000000001010010011 T
b00000000000000000000000000110100 U
b00000000000000000000000000110100 V
b00000000000000000000000000111000 W
b00000000001100011000001000110011 X
b00000000000000001000000001100111 Y
b00000000000000000000000000111000 Z
b00001 d
b00000 e
b00101 f
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000001000000000000000 l
b00000000000000001000000000000000 m
b1100111 p
b00000000000000000000000001000000 t
b00010000 v
b00000000000000000000000000111100 w
b00000000000000000000000000101100 x
b00000000000000000000000000000000 y
b00000000000000000000000000101000 {
b00000000000000000000000000101000 |
b00000000000000000000000001010000 }
1&!
1.!
b00000000000000000000000000000000 0!
01!
15!
b00000000000000000000000000000000 8!
b00000000000000000000000000101100 9!
#54
05!
#55
b00000000000000000000000000110100 $
b00000000000000000000000000101000 %
b00000000000000000000000000000000 &
b00000000000000000000000000101100 '
b00001 -
b00000 .
b00000000000000000000000001010000 Q
b00000000001100011000001000110011 T
b00000000000000000000000000111000 U
b00000000000000000000000000111000 V
b00000000000000000000000000111100 W
b00000000000000001000000001100111 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
1`
b00000 d
b00100 f
1g
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b0000000 p
b00010100 s
b00000000000000000000000001000100 t
b00010001 v
b00000000000000000000000001000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 {
b00000000000000000000000000101100 |
b00000000000000000000000000101100 }
0&!
0.!
15!
b00000000000000000000000000000000 9!
b00000000000000000000000001010000 :!
0;!
#56
05!
#57
b00000000000000000000000000111000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 '
b00000 -
b00000000000000000000000000101100 Q
b00000000000000001000000001100111 T
b00000000000000000000000000111100 U
b00000000000000000000000000000000 V
b00000000000000000000000000000100 W
b00000000000000000000000000000000 X
0]
0`
b00000 f
0g
1h
b00001011 s
b00000000000000000000000000101100 t
b00001011 v
b00000000000000000000000001000100 w
b00000000000000000000000000101100 {
b00000000000000000000000001011000 }
15!
b00000000000000000000000000101100 :!
#58
05!
#59
b00000000000000000000000000000000 $
b00000000000000000000000000110011 P
b00000000000000000000000001011000 Q
b00000000000000000000000000000000 T
b00000000000000000000000000000100 U
1[
0\
0h
b00010110 s
b00000000000000000000000000110000 t
b00001100 v
b00000000000000000000000000101100 w
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
15!
b00000000000000000000000001011000 :!
